{"version":3,"sources":["components/Header.js","components/navigation.js","components/UserList.js","components/userProfile.js","components/singleUser.js","components/body.js","components/dummyCompo.js","views/adminPanel.js","App.js","serviceWorker.js","index.js","components/userList.module.css"],"names":["useStyles","makeStyles","theme","root","display","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","menuButton","marginRight","hide","MiniDrawer","classes","className","CssBaseline","AppBar","position","Toolbar","IconButton","color","aria-label","edge","Typography","variant","noWrap","style","fontWeight","right","width","flexShrink","whiteSpace","drawerOpen","enteringScreen","drawerClose","overflowX","spacing","breakpoints","up","Naviagation","useTheme","Fragment","Drawer","paper","toolbar","direction","Divider","List","paddingTop","ListItem","ListItemIcon","to","StyledTableCell","withStyles","head","backgroundColor","palette","common","black","white","body","fontSize","TableCell","content","flexGrow","padding","table","minWidth","UserList","props","useState","userInfo","userData","setUserData","useEffect","fetch","page","then","res","json","resData","temp","per_page","total","total_pages","data","forEach","el","push","catch","err","console","log","Grid","container","item","xs","TableContainer","component","Paper","Table","TableHead","TableRow","align","TableBody","length","map","row","Style","key","email","onClick","getuserIdHandler","id","first_name","last_name","Avatar","alt","src","avatar","margin","UserProfile","fullTimeRef","useRef","fName","lName","gender","mobile","partTime","fullTime","onSubmit","event","preventDefault","alert","current","focus","autoComplete","sm","TextField","label","type","onChange","persist","target","value","required","FormControlLabel","control","Checkbox","checked","name","ref","FormControl","InputLabel","shrink","htmlFor","Select","e","inputProps","MenuItem","textAlign","Button","SimpleDialogDemo","setuserData","open","setOpen","showModal","userId","Dialog","onClose","closeModal","aria-labelledby","aria-describedby","DialogTitle","DialogContent","ad","company","text","url","TabPanel","children","index","other","role","hidden","Box","p","a11yProps","background","SimpleTabs","React","setValue","userID","setuserID","showUserModal","setShowUserModal","userIDHandler","uID","marginTop","Container","Tabs","newValue","Tab","DummyCompo","AdminPanel","exact","path","Home","Dummy","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.3dbface7.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport AccountBalanceIcon from '@material-ui/icons/AccountBalance';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  hide: {\n    display: 'none',\n  }\n}));\n\nexport default function MiniDrawer() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={classes.appBar}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            edge=\"start\"\n            className={classes.menuButton}\n          >\n            <AccountBalanceIcon/>\n          </IconButton>\n          <Typography variant=\"h6\" noWrap style={{fontWeight:'bold'}}>\n            Admin Panel\n          </Typography>\n          <span style={{position:'relative', right:'-65%'}}><Typography variant=\"h6\">\n          Ashish Kumar Rena\n        </Typography></span>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport HomeIcon from '@material-ui/icons/Home';\nimport EcoIcon from '@material-ui/icons/Eco';\nimport {Link} from 'react-router-dom';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: 'nowrap',\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: 'hidden',\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9) + 1,\n    },\n  },\n}));\n\nconst Naviagation = () => {\n\n  const classes = useStyles();\n  const theme = useTheme();\n\n    return(<React.Fragment>\n        <Drawer\n        variant=\"permanent\"\n        className={classes.drawerClose}\n        classes={{\n          paper: classes.drawerClose,\n        }}\n      >\n        <div className={classes.toolbar}>\n          <IconButton >\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n        <List style={{paddingTop:'20px'}}>\n        <ListItem >\n        <ListItemIcon><Link to={'/'}><HomeIcon /></Link> </ListItemIcon>\n  </ListItem>\n  <ListItem >\n        <ListItemIcon><Link to={'/dummyComponent'}><EcoIcon /></Link> </ListItemIcon>\n  </ListItem>\n        </List>\n      </Drawer>\n        </React.Fragment>);\n};\n\nexport default Naviagation;","import React, {useState, useEffect} from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Avatar from '@material-ui/core/Avatar';\nimport * as Style from './userList.module.css';\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\n\nconst useStyles = makeStyles((theme) => ({\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n    },\n    table: {\n      minWidth: 700,\n    },\n  }));\n\nconst UserList = (props) => {\n    const classes = useStyles();\n\n    const [userData, setUserData] = useState({\n      \"page\": 1,\n      \"per_page\": 0,\n      \"total\": 12,\n      \"total_pages\": 2,\n      userInfo:[] \n    });\n\n    useEffect(()=> {\n\n      const getUserData = () => {\n        fetch(`https://reqres.in/api/users?page=${userData.page}`)\n        .then(res => res.json())\n        .then(resData => {\n            const temp = {...userData};\n                temp.page = resData.page;\n                temp.per_page = resData.per_page;\n                temp.total = resData.total;\n                temp.total_pages = resData.total_pages;\n                resData.data.forEach((el) => {\n                  temp.userInfo.push(el)\n                });\n            setUserData(temp);\n        })\n        .catch(err => console.log(err))\n      }\n      \n      getUserData();\n    },[]);\n\n    return(<React.Fragment>\n      \n      <main className={classes.content}>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n        <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"custom pagination table\">\n      <TableHead>\n            <TableRow>\n              <StyledTableCell align=\"center\">ID</StyledTableCell>\n              <StyledTableCell align=\"center\">Email ID</StyledTableCell>\n              <StyledTableCell align=\"center\">First Name</StyledTableCell>\n              <StyledTableCell align=\"center\">Last Name</StyledTableCell>\n              <StyledTableCell align=\"center\">Avatar</StyledTableCell>\n            </TableRow>\n          </TableHead>\n        <TableBody>\n          {userData.userInfo.length >0 && userData.userInfo.map(row => {\n            return (<TableRow className={Style.tableList} key={row.email} onClick={()=> props.getuserIdHandler(row.id)}>\n              <TableCell align=\"center\">{row.id} </TableCell>\n              <TableCell align=\"center\">{row.email}</TableCell>\n              <TableCell align=\"center\">{row.first_name}</TableCell>\n              <TableCell align=\"center\">{row.last_name}</TableCell>\n              <TableCell align=\"center\"><Avatar alt=\"Remy Sharp\" src={row.avatar} /></TableCell>\n            </TableRow>)\n          })}\n        </TableBody>\n      </Table>\n    </TableContainer>\n        </Grid>\n      </Grid>\n    </main>\n        \n        </React.Fragment>);\n};\n\nexport default UserList;","import React, { useState, useRef } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport { Grid, Paper } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '25ch',\n    },\n  },\n}));\n\nconst UserProfile = () => {\n  const classes = useStyles();\n  const fullTimeRef = useRef();\n  const [userData, setUserData] = useState({\n    fName: '',\n    lName: '',\n    gender: '',\n    email: '',\n    mobile: '',\n    partTime: false,\n    fullTime: false,\n  })\n\n  const onSubmitHandler = (event) => {\n    event.preventDefault();\n    if(!userData.partTime && !userData.fullTime)\n    {\n      alert(\"Kindly select Job Type\");\n      fullTimeRef.current.focus();\n    } else if(userData.gender === '') {\n      alert(\"Kindly select Gender\"); \n    }\n    else\n      console.log(userData);\n  }\n\n  const fNameChangeHandler = (event) => {\n    event.persist();\n      setUserData((data) =>{\n        return {\n          ...data,\n          fName: event.target.value\n        }\n      });\n  }\n\n  const lNameChangeHandler = (event) => {\n    event.persist();\n      setUserData((data) =>{\n        return {\n          ...data,\n          lName: event.target.value\n        }\n      });\n  }\n\n  const emailChangeHandler = (event) => {\n    event.persist();\n      setUserData((data) =>{\n        return {\n          ...data,\n          email: event.target.value\n        }\n      });\n  }\n\n  const mobileNoChangeHandler = (event) => {\n    event.persist();\n    setUserData((data)=>{\n      return{\n        ...data,\n        mobile: event.target.value\n      }\n    });\n  }\n\n  const handleChangePartTimeHandler = () => {\n    setUserData((data)=>{\n      return {\n        ...data,\n        partTime: !data.partTime\n      }\n    });\n  }\n\n  const handleChangeFullTimeHandler = () => {\n    setUserData((data)=>{\n      return {\n        ...data,\n        fullTime: !data.fullTime\n      }\n    });\n  }\n\n  const userGenderHandler = (e) => {\n    setUserData((data)=>{\n      return {\n        ...data,\n        gender: e.target.value\n      }\n    });\n  }\n\n  return (\n    <Paper>\n    <form className={classes.root} onSubmit={onSubmitHandler} autoComplete=\"off\" style={{padding:'50px 0px'}}>\n    <Grid container spacing={3} style={{width:'80%'}}>\n      <Grid item xs={12} sm={4}>\n        <TextField id=\"outlined-basic\"\n          label=\"First Name\"\n          type=\"text\"\n          variant=\"outlined\"\n          onChange={fNameChangeHandler}\n          value={userData.fName}\n          required\n        />\n      </Grid>\n      <Grid item xs={12} sm={4}>\n        <TextField id=\"outlined-basic\"\n          label=\"last Name\"\n          type=\"text\"\n          variant=\"outlined\"\n          onChange={lNameChangeHandler}\n          value={userData.lName}\n          required\n        />\n      </Grid>\n      <Grid item xs={12} sm={4}>\n        <TextField id=\"outlined-basic\"\n          label=\"Email\"\n          type=\"email\"\n          variant=\"outlined\"\n          onChange={emailChangeHandler}\n          value={userData.email}\n          required\n        />\n      </Grid>\n    </Grid>\n    <Grid container spacing={3} style={{width:'80%'}}>\n      <Grid item xs={12} sm={4}>\n        <TextField\n          id=\"outlined-basic\"\n          type=\"number\"\n          label=\"Mobile No\"\n          variant=\"outlined\"\n          onChange={mobileNoChangeHandler}\n          value={userData.mobile}\n          required\n        />\n      </Grid>\n      <Grid item xs={12} sm={4}>\n        <FormControlLabel\n        control={\n          <Checkbox checked={userData.partTime} \n          onChange={handleChangePartTimeHandler}\n          value={userData.partTime}\n          name=\"checkedA\" />}\n        label=\"Part-Time\"\n      />\n      <FormControlLabel\n        control={\n          <Checkbox \n          checked={userData.fullTime} \n          onChange={handleChangeFullTimeHandler} \n          value={userData.fullTime}\n          ref={fullTimeRef}\n          name=\"checkedA\" />}\n        label=\"Full-Time\"\n      />\n      </Grid>\n      <Grid item xs={12} sm={4}>\n        <FormControl>\n          <InputLabel shrink htmlFor=\"age-label-placeholder\">\n            Gender\n          </InputLabel>\n          <Select \n            value={userData.gender}\n            onChange={userGenderHandler}\n            name=\"Gender\"\n            inputProps={{\n              name: 'gender',\n              id: 'gender-simple',\n              }}\n            required\n          >\n          <MenuItem value=\"\">\n            <em>None</em>\n              </MenuItem>\n              <MenuItem value={\"male\"}>Male</MenuItem>\n              <MenuItem value={\"female\"}>Female</MenuItem>\n          </Select>\n        </FormControl>\n      </Grid>\n    </Grid>\n    <br/>\n    <Grid container style={{width:'75%', textAlign:'right'}}>\n    <Grid item xs={12} sm={12}><Button type='submit' variant=\"contained\" color=\"secondary\" >SUBMIT</Button></Grid>\n    </Grid>\n  </form>\n    </Paper>\n    \n  );\n}\n\nexport default UserProfile;\n","import React, { useEffect, useState } from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Grid, Avatar } from '@material-ui/core';\n\n\nconst SimpleDialogDemo = (props) => {\n  const [userData, setuserData] = useState({});\n  const [open, setOpen] = useState(false);\n\n  useEffect(()=>{\n    setOpen(props.showModal);\n  },[props.showModal])\n  useEffect(()=> {\n    if(props.userId !== 0)\n    {\n      const getuserInfo = () => {\n        fetch(`https://reqres.in/api/users/${props.userId}`)\n        .then(resData => resData.json())\n        .then(data=> {\n          setuserData(data);\n        })\n        .catch(err => console.log(err))\n      }\n      getuserInfo();\n    }\n  },[props.userId]);\n\n  useEffect(()=>{\n  },[userData]);\n\n  const handleClose = () => {\n      setOpen(!open);\n      props.closeModal(0);\n  };\n\n  return (\n    <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"User Complete Data\"}</DialogTitle>\n        <DialogContent>\n        <Grid container>\n                <Grid item xs={10}>\n                    <Avatar src={userData.data && userData.data.avatar}/>\n                </Grid>\n            </Grid>\n            <br/>\n            <Grid container>\n                <Grid item xs={12}>\n                    Name : <span>{ userData.data && userData.data.first_name}  { userData.data && userData.data.last_name}</span>\n                </Grid>\n            </Grid>\n            <Grid container>\n                <Grid item xs={12}>\n                    Email Address:  <span>{ userData.data && userData.data.email}</span>\n                </Grid>\n            </Grid>\n            <br/>\n            <Grid container>\n                <Grid item xs={12}>\n                    Company Name:  <span>{ userData.data && userData.ad.company}</span>\n                </Grid>\n                <Grid item xs={12}>\n                    About:  <span>{ userData.data && userData.ad.text}</span>\n                </Grid>\n                <Grid item xs={12}>\n                    Website URL:  <span>{ userData.data && userData.ad.url}</span>\n                </Grid>\n            </Grid>\n        </DialogContent>\n      </Dialog>\n  );\n}\n\nexport default SimpleDialogDemo;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport UserList from './UserList';\nimport UserProfile from './userProfile';\nimport UserDetails from './singleUser';\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </Typography>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nexport default function SimpleTabs() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n  const [userID, setuserID] = React.useState(0);\n  const [showUserModal, setShowUserModal] = React.useState(false);\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const userIDHandler = (uID) => {\n    setuserID(uID);\n    setShowUserModal(!showUserModal);\n  }\n\n  return (\n    <div className={classes.root} style={{marginTop:'70px'}}>\n        <Container style={{marginTop:'50px'}}>\n        <AppBar position=\"static\">\n        <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\">\n          <Tab label=\"User List\" {...a11yProps(0)} />\n          <Tab label=\"User Profile\" {...a11yProps(1)} />\n        </Tabs>\n      </AppBar>\n      <TabPanel value={value} index={0} style={{backgroundColor:'#DEE9F0'}}>\n        <UserList getuserIdHandler={userIDHandler}/>\n      </TabPanel>\n      <TabPanel value={value} index={1} style={{textAlign:'center', backgroundColor:'#DEE9F0'}}>\n        <UserProfile/>\n      </TabPanel>\n        </Container>\n        <UserDetails userId={userID} showModal={showUserModal} closeModal={userIDHandler}/>\n    </div>\n  );\n}\n","import React from 'react';\n\nconst DummyCompo = () => {\n    return(<div style={{marginTop:'70px'}}>\n            <h1>Dummy Component</h1>\n        </div>);\n};\n\nexport default DummyCompo;","import React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Header from '../components/Header';\nimport Navigation from '../components/navigation';\nimport Home from '../components/body';\nimport Dummy from '../components/dummyCompo';\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\nconst AdminPanel = () => {\n    return(<React.Fragment>\n        <BrowserRouter>\n            <div style={{display:'flex'}}>\n                <CssBaseline />\n                <Header/>\n                <Navigation/>\n                <Switch>\n                    <Route exact path=\"/\" component={Home}/>\n                    <Route path=\"/home\" component={Home}/>\n                    <Route path=\"/dummyComponent\" component={Dummy}/>\n                </Switch>\n            </div>\n        </BrowserRouter>\n        </React.Fragment>)\n}\n\nexport default AdminPanel;","import React from 'react';\nimport AdminPanel from './views/adminPanel';\nfunction App() {\n  return (<AdminPanel />);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableList\":\"userList_tableList__p7thB\"};"],"sourceRoot":""}